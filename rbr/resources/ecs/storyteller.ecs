!   Storyteller script

    script Storyteller
    
    import div Body and variable SID and variable TID

    div Container
    div Content
    div TopicText
    div ImageDiv
    div Mask
    img BigPic
    img Image
    a Link
    select Select
    option Option
    callback DecoratorCallback
    variable Mobile
    variable CDNPath
    variable Mode
    variable Stories
    variable AspectW
    variable AspectH
    variable CurrentSID
    variable CurrentTID
    variable C
    variable L
    variable N
    variable M
    variable P
    variable S
    variable Margin
    variable WindowWidth
    variable WindowHeight
    variable Width
    variable Height
    variable ButtonSize
    variable Title
    variable Payload
    variable Function
    variable Data
    variable Display
    variable Stid
    variable Attributes
    variable Source
    variable Style
    variable Class
    variable Classes
    variable Options
    variable List
    variable LinkCount
    variable SelectCount
    variable ImageCount
    variable Value
    variable DataID
    variable Prefix
    variable Topic
    variable FontScale
    variable FontSize
    
    clear Mobile
    if mobile
    begin
    	if portrait set Mobile
    end
    
    put `https://cdn.jsdelivr.net/gh/easycoder/storyteller@master` into CDNPath
    
    put `/resources/help/` into Stories
    
    gosub to GetStyles
    
    clear Body
    create Container in Body
    if not Mobile
    begin
        set style `position` of Container to `relative`
        set style `overflow` of Container to `hidden`
        set style `padding-right` of Container to `0.5em`
    	on window resize gosub to SetStyles
    end
    
    set style `margin` of Container to `0.5em`
    set style `text-align` of Container to `left`
    create Content in Container
    set style `position` of Content to `absolute`
    set style `height` of Content to `100%`
    create TopicText in Content

    get Mode from storage as `mode`
    
    rest get Title from Stories cat `title.txt?v=` cat now or begin end
    set the title to Title

    gosub to SetStyles
    
	load showdown
  	on DecoratorCallback go to Decorate

!	View a record, given its Subject and Topic ids.
ViewRecord:
!	Get the content
    rest get Topic from Stories cat SID cat `/` cat TID cat `.txt?v=` cat now
    or begin
    	put `home` into SID
    	put `content` into TID
        rest get Topic from Stories cat SID cat `/` cat TID cat `.txt?v=` cat now
        continue
    end
    
!	Remember where we are
    put SID into storage as `id`
    put TID into storage as `tid`
    put SID into CurrentSID
    put TID into CurrentTID

    if Mobile set the style of TopicText to `padding:0.5em`
    else set the style of TopicText to 
    	`width:100%;height:calc(100% - 5em);background:none;overflow-y: auto`
            cat `;padding-right:1em`

!	Handle the links created by the showdown extension
    put 0 into LinkCount
    put 0 into ImageCount
    put 0 into SelectCount
    set the content of TopicText to showdown decode Topic with DecoratorCallback

!	Process links
    set the elements of Link to LinkCount
    put 0 into N
    while N is less than LinkCount
    begin
        index Link to N
        attach Link to `ec-link-` cat N
        add 1 to N
    end
    on click Link
    begin
        put attribute `data-id` of Link into DataID
       	put the position of `-` in DataID into N
        if N is greater than 0
        begin
            put left N of DataID into Prefix
            if Prefix is `S`
            begin
                put from 2 of DataID into SID
                put `content` into TID
                go to ViewAnotherRecord
            end
            else if Prefix is `T`
            begin
                put from 2 of DataID into TID
                go to ViewAnotherRecord
            end
            else if Prefix is `ST`
            begin
                put from 3 of DataID into TID
                put the position of `/` in TID into N
                if N is greater than 0
                begin
                    put left N of TID into SID
                    add 1 to N
                    put from N of TID into TID
                    go to ViewAnotherRecord
                end
            end
        end
    end

!	Process images
    set the elements of ImageDiv to ImageCount
    set the elements of Image to ImageCount
    put 0 into N
    while N is less than ImageCount
    begin
        index ImageDiv to N
        index Image to N
        attach ImageDiv to `ec-imagediv-` cat N
        attach Image to `ec-image-` cat N
        add 1 to N
    end
    on click Image
    begin
        put attribute `data-options` of Image into Options
        if the position of `nolink` in Options is -1
        begin
        	if true !Mobile
            begin
                create Mask
                set the style of Mask to `position:fixed;top:0;left:0;width:100vw;height:150vh;`
                    cat `text-align:center;background-color:rgba(0,0,0,0.7)`
                create BigPic in Mask
                set the style of BigPic to
                    `max-width:93vw;max-height:93vh;margin-top:3%`
                put attribute `src` of Image into Source
                set attribute `src` of BigPic to Source
            end
            on click Mask remove element Mask
            on click BigPic remove element Mask
        end
    end

!	Process selectors
    set the elements of Select to SelectCount
    put 0 into N
    while N is less than SelectCount
    begin
    	index Select to N
    	attach Select to `ec-select-` cat N
        put attribute `data-options` of Select into Options
		json split Options on `|` into List
        put 0 into M
        while M is less than the json count of List
        begin
            create Option in Select
        	put element M of List into Value
            put Value into Display
            put the position of `:` in Value into P
            if P is not -1
            begin
            	put left P of Value into Value
                add 1 to P
                put from P of Display into Display
            end
            set attribute `data-st` of Option to left 2 of Value
            put from 2 of Value into Value
            put Display into Attributes
            put the position of `!` in Display into P
            if P is -1 put empty into Attributes
            else
            begin
            	put left P of Display into Display
                add 1 to P
                put from P of Attributes into Attributes
            end
            set the content of Option to Display
            if Attributes is not empty set the attributes of Option to Attributes
            set attribute `value` of Option to Value
        	add 1 to M
        end
    	add 1 to N
    end
    on change Select
    begin
        get Option from Select
        put attribute `data-st` of Option into Function
        put attribute `value` of Option into Value
        if Function is `S-`
        begin
	        put Value into SID
	        put `content` into TID
	        go to ViewAnotherRecord
        end
        else if Function is `T-`
        begin
	        put Value into TID
	        go to ViewAnotherRecord
        end
        else if Function is `ST-`
        begin
	        put Value into TID
            put the position of `/` in TID into N
            if N is greater than 0
            begin
	            put left N of TID into SID
	            add 1 to N
	            put from N of TID into TID
		        go to ViewAnotherRecord
            end
        end
    end

    wait 20 ticks
    if Mode is `admin` alert `Scroll`
    if Mobile scroll to 0 else scroll TopicText to 0
!    scroll TopicText to 0 ! This doesn't work on mobile

	on close exit
	set ready
 	stop

!	View another record, given the Subject and Topic ids
ViewAnotherRecord:
	if SID is not CurrentSID go to ViewRecord
    if TID is not CurrentTID go to ViewRecord
    stop 

!	Responsive design: Compute the size and position of all the screen elements
SetStyles:
    put the width of window into WindowWidth
    put the height of window into WindowHeight
    
!	Choose an optimum width based on the window height
	put WindowHeight into Height
	multiply Height by AspectW giving Width
    divide Width by AspectH

!	Make sure the window is wide enough
    take Width from WindowWidth giving Margin
    divide Margin by 2
    if Margin is less than 0
    begin
    	put 0 into Margin
        put WindowWidth into Width
    end
    
!	Style the Container
    set style `left` of Container to Margin cat `px`
    set style `top` of Container to 0
	set style `width` of Container to Width cat `px`
    put the height of Body into Height
    set style `height` of Container to Height cat `px`
    
!	Compute the font size
    divide Height by FontScale giving FontSize
    if Mobile
    begin
        multiply FontSize by 5
        divide FontSize by 4
        set style `line-height` of Container to `140%`
    end
    set style `font-size` of Container to FontSize cat `px`
    return

!------------------------------------------------------------------------------
!	This manages the Showdown extension.

!	Decorate is called for every occurrence of ~...~ in the topic data
Decorate:
    put the payload of DecoratorCallback into Payload
    put the position of `:` in Payload into N
    if N is -1
    begin
    	if Payload is `clear` gosub to ProcessClear
    end
    else
    begin
        put left N of Payload into Function
        add 1 to N
        put from N of Payload into Data
        if Function is `sid` gosub to ProcessSID
        else if Function is `tid` gosub to ProcessTID
        else if Function is `stid` gosub to ProcessSTID
        else if Function is `img` gosub to ProcessImage
        else if Function is `select` gosub to ProcessSelect
        else if Function is `space` gosub to ProcessSpace
        else if Function is `comment` gosub to ProcessComment
        else if Function is `pn` gosub to ProcessPreviousNext
    end
    set the payload of DecoratorCallback to Payload
    stop

!	Process a request for a new subject
!   Syntax: ~sid:{sid}:{display text}~
ProcessSID:
	put Data into Display
    put the position of `:` in Data into N
    if N is not -1
    begin
	    put left N of Data into Data
	    add 1 to N
	    put from N of Display into Display
    end
    put `<a href="#" id="ec-link-` cat LinkCount cat `" class="button"`
    	cat ` data-id="S-` cat Data cat `">` cat Display cat `</a>` into Payload
    add 1 to LinkCount
    return

!	Process a request for a new topic
!   Syntax: ~tid:{tid}:{display text}~
ProcessTID:
	put Data into Display
    put the position of `:` in Data into N
    if N is not -1
    begin
	    put left N of Data into Data
	    add 1 to N
	    put from N of Display into Display
    end
    put `<a href="#" id="ec-link-` cat LinkCount cat `" class="button"`
    	cat `" data-id="T-` cat Data cat `">` cat Display cat `</a>` into Payload
    add 1 to LinkCount
    return

!	Process a request for a new subject and topic
!   Syntax: ~stid:{stid}:{display text}~
ProcessSTID:
	put Data into Display
    put the position of `:` in Data into N
    if N is not -1
    begin
	    put left N of Data into Data
	    add 1 to N
	    put from N of Display into Display
    end
    put `<a href="#" id="ec-link-` cat LinkCount cat `" class="button"`
    	cat `" data-id="ST-` cat Data cat `">` cat Display cat `</a>` into Payload
    add 1 to LinkCount
    return

!	Process an image, including positioning and class information
!   Syntax: ~img:{url}:{styles}!{options}~
ProcessImage:
	put empty into Options
	put the position of `/` in Data into N
    if N is -1 put SID into Source
    else
    begin
    	put left N of Data into Source
        add 1 to N
        put from N of Data into Data
    end
    put the position of `:` in Data into N
    put empty into Class
    if N is not -1 
    begin
        put Source cat `/images/` cat left N of Data into Source
        add 1 to N
        if Data is not empty
        begin
        	put from N of Data into Class
        end
        put the position of `!` in Class into N
        if N is not -1
        begin
        	put Class into Options
            put left N of Class into Class
            add 1 to N
            put from N of Options into Options
        end
    end
    json split Class on ` ` into Classes
    put empty into Class
    put empty into Style
    put 0 into N
    while N is less than the json count of Classes
    begin
    	put empty into S
    	put element N of Classes into C
        if C is `border` begin end
        else if C is `left` begin end
        else if C is `right` begin end
        else if C is `center` begin end
        else if C is `clear` begin end
		else if right 1 of C is `%`
        begin
        	put the length of C into L
            take 1 from L
            put left L of C into S
            put `width:` cat S cat `%` into S
            put empty into C
        end
        else
        begin
        	alert `Unknown style ` cat C
            return
        end
        if C is not empty
        begin
	        if Class is not empty put Class cat ` ` into Class
	        put Class cat C into Class
        end
        if S is not empty
        begin
	        if Style is not empty put Style cat ` ` into Style
    	    put Style cat S into Style
        end
    	add 1 to N
    end
    put `<div id="ec-imagediv-` cat ImageCount into Payload
    if Class is not empty put Payload cat `" class="` cat Class into Payload
    if Style is not empty put Payload cat `" style="` cat Style into Payload
    put from 1 of Stories into Value
    if the position of `nolink` in Options is -1
    begin
        put Payload cat `">` cat `<a href="#">`
            cat `<img id="ec-image-` cat ImageCount cat `" src="` cat Value cat Source
            cat `" data-options="` cat Options cat `" style="width:100%" ></a></div>` into Payload
    end
    else
    begin
        put Payload cat `">` cat `<img id="ec-image-` cat ImageCount cat `" src="` cat Value cat Source
            cat `" data-options="` cat Options cat `" style="width:100%" ></div>` into Payload
    end
    add 1 to ImageCount
    return

!	Process a 'clear'
!   Syntax: ~clear~
ProcessClear:
    put `<div style="height:1px;clear:both"></div>` into Payload
    return

!	Process a 'select'
ProcessSelect:
    put `<select id="ec-select-` cat SelectCount cat `"`
    	cat ` data-options="` cat Data cat `"`
    	cat `></select>` into Payload
    add 1 to SelectCount
    return

!	Process a space (add a non-breaking space)
!   Syntax: ~space~
ProcessSpace:
	if Mobile put `<br>` into Payload
    else
    begin
		put empty into Payload
		put the value of Data into M
	    put 0 into N
	    while N is less than M
	    begin
	    	put Payload cat `&nbsp;` into Payload
	        add 1 to N
	    end
    end
    return

!	Process a 'comment' (TODO)
!   Syntax: ~comment~
ProcessComment:
    put empty into Payload
    return

!	Process a Previous ... Next
!   Syntax: ~pn:{previous stid}:{display text}:{next stid}:{display text}~
ProcessPreviousNext:
    put empty into Payload
    divide ButtonSize by 2 giving S
    put the position of `:` in Data into N
    if N is not -1
    begin
        ! Get the stid
        put left N of Data into Stid
        add 1 to N
        put from N of Data into Data
        ! Check if there's a Next
        put the position of `:` in Data into M
        if M is -1
        begin
            put the length of Data into M
            put Data into Display
        end
        else
        begin
            put left M of Data into Display
            add 1 to M
        end
        put from M of Data into Data
        ! Do the Prev link
        if Stid is not empty
        begin
            put the position of `/` in Stid into P
            if P is  -1
                put `<a href="#" id="ec-link-` cat LinkCount
                    cat `" class="button" style="float:left"`
                    cat ` data-id="S-` cat Stid cat `">`
                    cat `<img src="` cat CDNPath cat `/icons/arrow-previous.png"`
                    cat ` style="width:` cat S cat `px;margin-right:1em">`
                    cat Display cat `</a>` into Payload
            else
                put `<a href="#" id="ec-link-` cat LinkCount
                    cat `" class="button" style="float:left"`
                    cat ` data-id="ST-` cat Stid cat `">`
                    cat `<img src="` cat CDNPath cat `/icons/arrow-previous.png"`
                    cat ` style="width:` cat S cat `px;margin-right:1em">`
                    cat Display cat `</a>` into Payload
            add 1 to LinkCount
        end
        ! Now the Next link
        put empty into Stid
        if Data is not empty
        begin
            put 0 into N
            put the position of `:` in Data into N
            if N is not -1
            begin
                ! Get the stid
                put left N of Data into Stid
                add 1 to N
                put from N of Data into Display
            end
            else
            begin
                put Data into Stid
                put Data into Display
            end
            if Stid is not empty
            begin
                put the position of `/` in Stid into P
                if P is  -1
                    put Payload cat  `<a href="#" id="ec-link-` cat LinkCount
                        cat `" class="button" style="float:right"`
                        cat ` data-id="S-` cat Stid cat `">` cat Display
                        cat `<img src="` cat CDNPath cat `/icons/arrow-next.png" style="width:` cat S cat `px;margin-left:1em">`
                        cat `</a>` into Payload
                else
                    put Payload cat `<a href="#" id="ec-link-`
                        cat LinkCount cat `" class="button" style="float:right"`
                        cat ` data-id="ST-` cat Stid cat `">` cat Display
                        cat `<img src="` cat CDNPath cat `/icons/arrow-next.png" style="width:` cat S cat `px;margin-left:1em">`
                        cat `</a>` into Payload
                add 1 to LinkCount
            end
        end
    end
    put Payload cat `<div style="clear:both;height:1"></div>` into Payload

    return

!   Put some styles into the head
GetStyles:
!   Set the font size of all selectors
    set style `select` to `{font-size:1em}`
!   Force its owner to sit below all previous content
    set style `.clear` to `{clear:both}`
!   Image border and padding
    set style `.border` to `{padding:2px;border:1px solid black}`
!   Float left with a margin all round
    set style `.left` to `{float:left;margin:0.5em}`
!   Float right with a margin all round
    set style `.right` to `{float:right;margin:0.5em}`
!   Put the item in the centre of the page
    set style `.center` to `{margin:0 auto}`
    return