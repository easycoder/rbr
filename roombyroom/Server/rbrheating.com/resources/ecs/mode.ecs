!	Mode selection

	script Mode
    
    import div MainPanel
    	and div ModePanel
    	and img ModeIcon
        and variable Mode
        and variable Map
    	and variable ClickIndex
        and variable Demo
        and variable Result
    
    div ButtonT
    div ButtonB
    div ButtonM
    div ButtonO
    div ButtonC
    div ButtonH
    div OnUpButton
    div OnDownButton
    div OnTarget
    div Boost1Button
    div Boost2Button
    div Boost3Button
    div Boost4Button
    div Boost1Text
    div Boost2Text
    div Boost3Text
    div Boost4Text
    div AdvanceButton
    div AdvanceText
	img TimedEditIcon
    variable CurrentProfile
    variable Profiles
    variable Profile
    variable Rooms
    variable RoomSpec
    variable Target
    variable TargetFlag
    variable RoomName
    variable CurrentMode
    variable PeriodEditScript
    variable ModeWebson
    variable Integer
    variable FlashIndex
    variable Password
    variable Server
    variable Count
    variable Waiting
    variable Flashing
    variable OldAdvance
    variable NewAdvance
    variable MAC
    variable Dot
    variable OnUD
    variable Boost
    variable BoostFlag
    variable Flag
    variable L
    variable T
    variable X
    
!    debug step

	put empty into PeriodEditScript
    get Server from storage as `server`
    get MAC from storage as `MAC`
    get Password from storage as `password`

    index Mode to the index of ModeIcon
   	put Mode into CurrentMode
    wait 20 ticks

	clear ModePanel
    gosub to GetCurrentRooms
    put element ClickIndex of Rooms into RoomSpec
    put property `name` of RoomSpec into RoomName
    put property `advance` of RoomSpec into OldAdvance
    put OldAdvance into NewAdvance
    rest get ModeWebson from `/resources/webson/mode.json?v=` cat now
    replace `/ROOM/` with RoomName in ModeWebson
	render ModeWebson in ModePanel
    attach ButtonT to `mode-timed`
    attach ButtonB to `mode-boost`
    attach ButtonM to `mode-on`
    attach ButtonO to `mode-off`
    attach ButtonC to `mode-cancel`
    attach ButtonH to `mode-help`
    attach OnDownButton to `on-down`
    attach OnUpButton to `on-up`
    attach OnTarget to `on-target`
    attach Boost1Button to `boost-1`
    attach Boost2Button to `boost-2`
    attach Boost3Button to `boost-3`
    attach Boost4Button to `boost-4`
    attach Boost1Text to `boost-1-text`
    attach Boost2Text to `boost-2-text`
    attach Boost3Text to `boost-3-text`
    attach Boost4Text to `boost-4-text`
    attach TimedEditIcon to `timed-edit`
    attach AdvanceButton to `timed-advance`
    attach AdvanceText to `timed-advance-text`

    put property `target` of RoomSpec into Target
	set the content of OnTarget to Target cat `&deg;C`
    clear TargetFlag

    clear BoostFlag
    put 0 into Boost
	set style `color` of Boost1Text to `#f44`

	set style `visibility` of ModePanel to `visible`
    if property `advance` of RoomSpec is `A`
    begin
        set style `color` of AdvanceText to `#f44`
    end
    else
    begin
        set style `color` of AdvanceText to `black`
    end
    on click ButtonT go to SelectTimed
    on click ButtonB go to SelectBoost
    on click ButtonM go to SelectOn
    on click ButtonO go to SelectOff
    on click ButtonC go to SelectCancel
    on click ButtonH go to SelectHelp
    on click OnDownButton go to OnDown
    on click OnUpButton go to OnUp
    on click Boost1Button go to Boost1
    on click Boost2Button go to Boost2
    on click Boost3Button go to Boost3
    on click Boost4Button go to Boost4
    on click TimedEditIcon go to ShowTimes
    on click AdvanceButton go to Advance

	stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	'On' Up and Down buttons
OnDown:
	clear OnUD
    go to OnUpDown

OnUp:
	set OnUD

OnUpDown:
	if Target is empty put `0.0` into Target else put `` cat Target into Target
    put the position of `.` in Target into Dot
    if Dot is -1 multiply the value of Target by 10 giving T
    else
    begin
         put left Dot of Target into Integer
         multiply the value of Integer by 10 giving T
         add 1 to Dot
         add the value of from Dot of Target to T
    end
    if OnUD add 5 to T else if Target is not `0.0` take 5 from T
    if T is less than 10 put `0` cat T into T
    else put `` cat T into T
    put the length of T into L
    take 1 from L
    put left L of T into X
    put X cat `.` into X
    put X cat from L of T into Target
    set the content of OnTarget to Target cat `&deg;C`
    set TargetFlag
    stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	'Boost' buttons
Boost1:
	gosub to ResetBoostButtons
    set style `color` of Boost1Text to `#f44`
    put 0 into Boost
	stop

Boost2:
	gosub to ResetBoostButtons
    set style `color` of Boost2Text to `#f44`
    put 30 into Boost
	stop

Boost3:
	gosub to ResetBoostButtons
    set style `color` of Boost3Text to `#f44`
    put 60 into Boost
	stop

Boost4:
	gosub to ResetBoostButtons
    set style `color` of Boost4Text to `#f44`
    put 120 into Boost
	stop

ResetBoostButtons:
	set style `color` of Boost1Text to `black`
	set style `color` of Boost2Text to `black`
	set style `color` of Boost3Text to `black`
	set style `color` of Boost4Text to `black`
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Show the schedule times
ShowTimes:
    set style `visibility` of ModePanel to `hidden`
    put empty into Result
    if PeriodEditScript is empty
    	rest get PeriodEditScript from `/resources/ecs/periodedit.ecs?v=` cat now
    run PeriodEditScript with MainPanel and Map and ClickIndex and Result
    exit

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Advance to the next timed event
Advance:
	if NewAdvance is `A`
    begin
    	put empty into NewAdvance
        set style `color` of AdvanceText to `black`
    end
    else
    begin
    	put `A` into NewAdvance
        set style `color` of AdvanceText to `#f44`
    end
    go to SelectMode
    stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select timed mode
SelectTimed:
   	put `timed` into Mode
    clear BoostFlag
    go to SelectMode

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select 'boost' mode
SelectBoost:
	if CurrentMode is `boost`
    begin
        if Boost is 0
        begin
        	put property `prevmode` of RoomSpec into Mode
        	clear BoostFlag
        end
        else set BoostFlag
        go to SelectMode
    end
   	if Boost is 0 go to SelectCancel
   	else
    begin
    	if CurrentMode is not `boost` set property `prevmode` of RoomSpec to CurrentMode
        put `boost` into Mode
        set BoostFlag
       	go to SelectMode
    end

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select 'on' mode
SelectOn:
    put `on` into Mode
    clear BoostFlag
    set property `advance` of RoomSpec to ``
    go to SelectMode

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select off mode
SelectOff:
    put `off` into Mode
    clear BoostFlag
    set property `advance` of RoomSpec to ``
    go to SelectMode

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select cancel
SelectCancel:
    put CurrentMode into Mode
    put OldAdvance into NewAdvance
    clear TargetFlag
    clear BoostFlag
    go to SelectMode

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select help
SelectHelp:
    set style `visibility` of ModePanel to `hidden`
    put `Help home Mode` into Result
    exit

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select the mode and exit
SelectMode:
    set style `visibility` of ModePanel to `hidden`
    if Mode is `timed`
    begin
        set property `boost` of RoomSpec to 0
        if NewAdvance is not OldAdvance
        begin
        	set property `advance` of RoomSpec to NewAdvance
            go to ModeChange
        end
    end
    else if Mode is `on`
    begin
    	if TargetFlag
        begin
			set property `target` of RoomSpec to Target
			set property `boost` of RoomSpec to 0
            go to ModeChange
        end
    end
    else if Mode is `boost`
    begin
    	clear Flag
    	if TargetFlag
        begin
			set property `target` of RoomSpec to Target
			set property `boost` of RoomSpec to 0
            set Flag
        end
    	if BoostFlag
        begin
			set property `boost` of RoomSpec to `B` cat Boost
    		set property `advance` of RoomSpec to ``
            set Flag
        end
        if Flag go to ModeChange
    end
	if Mode is CurrentMode exit

ModeChange:
	set property `mode` of RoomSpec to Mode
    set element ClickIndex of Rooms to RoomSpec
    gosub to CopyRoomsToMap
    set property `message` of Map to `confirm`
    fork to PostMap
    fork to FlashModeIndicator
	! Wait for a response from the server
   	if Demo wait 5 seconds
    else
    begin
    	put 10 into Count
        while Count is greater than 0
        begin
            wait 5 seconds
            rest get Map from Server cat `/map/` cat MAC cat `?v=` cat now
            if property `message` of Map is `OK` go to SM2
            take 1 from Count
        end
    	alert `Website is not responding"
		put `Refresh` into Result
        exit
    end
SM2:
	clear Waiting
    put 0 into Count
    while Count is less than 10
    begin
    	if not Flashing go to SM3
        wait 10 ticks
    	add 1 to Count
    end
SM3:
    exit

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Flash the mode indicator button while waiting
FlashModeIndicator:
    set Waiting
    set Flashing
    put the index of ModeIcon into FlashIndex
	while Waiting
    begin
        index ModeIcon to FlashIndex
	    set style `opacity` of ModeIcon to `0.25`
    	wait 50 ticks
        index ModeIcon to FlashIndex
	    set style `opacity` of ModeIcon to `1.0`
        wait 50 ticks
    end
    clear Flashing
    stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Get the current room set from the map
GetCurrentRooms:
	put property `profile` of Map into CurrentProfile
    put property `profiles` of Map into Profiles
    put element CurrentProfile of Profiles into Profile
    put property `rooms` of Profile into Rooms        
	return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Copy the current room set to the map
CopyRoomsToMap:
	put property `profile` of Map into CurrentProfile
    put property `profiles` of Map into Profiles
    put element CurrentProfile of Profiles into Profile
    set property `rooms` of Profile to Rooms  
    set element CurrentProfile of Profiles to Profile
    set property `profiles` of Map to Profiles
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 	Post the map to the server
PostMap:
	if Demo put Map into storage as `map`
    else
	begin
   		rest post Map to Server cat `/map/` cat MAC cat `/` cat Password
        or begin
        	alert `Unable to save changes.` cat newline
            	cat `A common cause is having the wrong system password.`
        	continue
        end
	end
	stop