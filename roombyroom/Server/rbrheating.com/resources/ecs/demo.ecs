!	Demo actions

	script Demo
    
    import variable Map and variable Sensors and variable Demo
    
    variable Rooms
    variable RoomCount
    variable RoomSpec
    variable SensorSpec
    variable SensorIP
    variable Temp
    variable Dot
    variable Integer
    variable TempX10
    variable TargetX10
    variable Mode
    variable Mode2
    variable Events
    variable Event
    variable Now
    variable Until
    variable Target
    variable NoChange
    variable Boost
    variable E
    variable L
    variable R
    variable T

!	debug step

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 	Run the demo actions

    put empty into Sensors
    gosub to Init

    on message
    begin
        while true
        begin
            put property `rooms` of Map into Rooms
            put the json count of Rooms into RoomCount
            set the elements of Mode2 to RoomCount
            print Sensors
            put 0 into R
            while R is less than RoomCount
            begin
    			put element R of Rooms into RoomSpec
                put property `mode` of RoomSpec into Mode
                index Mode2 to R
                clear NoChange
                if Mode is not Mode2
                begin
                    put Mode into Mode2
                    set NoChange
                    gosub to Simulate
                end
                else if random 5 is 0 gosub to Simulate
                add 1 to R
            end
            wait 10
        end
    end

    set ready
	stop

Simulate:
    put `` cat property `sensor` of RoomSpec into SensorIP
    if SensorIP is not empty
    begin
        put property SensorIP of Sensors into SensorSpec
        put `` cat property `temperature` of SensorSpec into Temp
        put the position of `.` in Temp into Dot
        if Dot is -1 multiply the value of Temp by 10 giving TempX10
        else
        begin
            put left Dot of Temp into Integer
            multiply the value of Integer by 10 giving TempX10
            add 1 to Dot
            add the value of from Dot of Temp to TempX10
        end
        if not NoChange
        begin
            if property `relay` of SensorSpec is `on`
            begin
                if TempX10 is less than 240 add 1 to TempX10
            end
            else
            begin
                if TempX10 is greater than 120 take 1 from TempX10
            end
            divide TempX10 by 10 giving Temp
            put Temp cat `.` cat TempX10 modulo 10 into Temp
            set property `temperature` of SensorSpec to Temp
        end

        ! Actions that depend on the mode
        put property `mode` of RoomSpec into Mode
        if Mode is `off` gosub to RelayOff
        else if Mode is `on` gosub to DoOn
        else if Mode is `boost` gosub to DoBoost
        else if Mode is `timed` gosub to DoTimed

    Break:
        set property SensorIP of Sensors to SensorSpec
    end
	return

DoBoost:
    put `` cat property `boost` of RoomSpec into Boost
    if left 1 of Boost is `B`
    begin
        put the value of from 1 of Boost into Boost
        multiply Boost by 60
        put now into Now
        add Now to Boost
        set property `boost` of RoomSpec to Boost
        set element R of Rooms to RoomSpec
        set property `rooms` of Map to Rooms
        put Map into storage as `map`
    end
    ! Fall into DoOn

DoOn:
    put `` cat property `target` of RoomSpec into Temp
    put the position of `.` in Temp into Dot
    if Dot is -1 multiply the value of Temp by 10 giving TargetX10
    else
    begin
        put left Dot of Temp into Integer
        multiply the value of Integer by 10 giving TargetX10
        add 1 to Dot
        add the value of from Dot of Temp to TargetX10
    end
    if TempX10 is not less than TargetX10 gosub to RelayOff
    else gosub to RelayOn
    return

DoTimed:
    put property `events` of RoomSpec into Events
    put the json count of Events into L
    take 1 from L
    put 0 into E
    while E is not greater than L
    begin
        put element E of Events into Event
        ! Get the current hour/minute
        divide now by 60 giving Now ! minutes
        put Now modulo 24*60 into Now
        ! Get the event time
        put property `until` of Event into Until
        put the position of `:` in Until into Dot
        put the value of left Dot of Until into T
        multiply T by 60
        add 1 to Dot
        add the value of from Dot of Until to T
        ! Get the target temp
        put `` cat property `temp` of Event into Target
        put the position of `.` in Target into Dot
        if Dot is -1 multiply the value of Target by 10 giving Temp
        else
        begin
            put left Dot of Target into Integer
            multiply the value of Integer by 10 giving Temp
            add 1 to Dot
            add the value of from Dot of Target to Temp
        end
        ! Check if this is the right time segment
        if Now is less than T
        begin
            if TempX10 is less than Temp gosub to RelayOn
            else gosub to RelayOff
            go to Break
        end
        else
        begin
            if E is L
            begin
                put element 0 of Events into Event
                put `` cat property `temp` of Event into Target
                put the position of `.` in Target into Dot
                if Dot is -1 multiply the value of Target by 10 giving Temp
                else
                begin
                    put left Dot of Target into Integer
                    multiply the value of Integer by 10 giving Temp
                    add 1 to Dot
                    add the value of from Dot of Target to Temp
                end
                if TempX10 is less than Temp gosub to RelayOn
                else gosub to RelayOff
                end
        end
        add 1 to E
    end
    return

Init:
	print `Init`
    put property `rooms` of Map into Rooms
    put the json count of Rooms into RoomCount
    put 0 into R
    while R is less than RoomCount
    begin
    	put element R of Rooms into RoomSpec
        set property `mode` of RoomSpec to `off`
        put `` cat property `sensor` of RoomSpec into SensorIP
        if SensorIP is not empty
        begin
            put empty into SensorSpec
            put random 5 into T
            add 15 to T
            set property `temperature` of SensorSpec to T
            if random 1 set property `relay` of SensorSpec to `on`
            else set property `relay` of SensorSpec to `off`
            set property SensorIP of Sensors to SensorSpec
        end
        add 1 to R
    end
	return

RelayOn:
	set property `relay` of SensorSpec to `on`
	return

RelayOff:
	set property `relay` of SensorSpec to `off`
	return