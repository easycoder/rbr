!	Period Editor
!	This presents an editing panel for Timed mode. The user can add any number of
!	timing periods and set a desired temperature for each one.

	script PeriodEditor
    
    import div MainPanel
    	and variable Map
        and variable CurrentProfile
        and variable ClickIndex
        and variable Result

	div RoomName
    div DialogPanel
    div DialogTitle
    div DialogText
    div EditTimes
    div PeriodContent
    div PeriodInfo
    div HourField
    div MinuteField
    div TempField
    button DialogButton1
    button DialogButton2
    button TimesAddButton
    button TimesSaveButton
    button TimesCancelButton
    button TimesHelpButton
    button PeriodSave
    button PeriodDelete
    img HourUpButton
    img HourDownButton
    img MinuteUpButton
    img MinuteDownButton
    img TempUpButton
    img TempDownButton
    variable Webson
    variable Rooms
    variable RoomSpec
    variable Profiles
    variable Profile
    variable PeriodWebson
    variable PeriodInfoWebson
    variable PeriodEditorWebson
    variable Periods
    variable Period
    variable Period2
    variable NPeriods
    variable ThisPeriod
    variable HourValue
    variable MinuteValue
    variable TimeProperty
    variable Time
    variable TempValue
    variable TempProperty
    variable Temp
    variable Temps
    variable Value
    variable Editing
    variable Unsorted
    variable Changed
    variable RequestData
    variable HV
    variable MV
    variable P
    variable Q
    variable T
    variable T1
    variable T2

!    debug step
    
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 	The schedule editor
    gosub to GetCurrentRooms
    put element ClickIndex of Rooms into RoomSpec

	clear MainPanel
    rest get Webson from `/resources/webson/timeseditor.json?v=` cat now
    render Webson in MainPanel
    attach RoomName to `title-room-name`
    attach EditTimes to `edit-times`
    set the content of RoomName to property `name` of RoomSpec
    clear EditTimes
    rest get PeriodWebson from `/resources/webson/period.json?v=` cat now
    rest get PeriodInfoWebson from `/resources/webson/periodinfo.json?v=` cat now
    rest get PeriodEditorWebson from `/resources/webson/periodeditor.json?v=` cat now
    put property `events` of RoomSpec into Periods

	attach TimesAddButton to `edit-add-button`
    attach TimesSaveButton to `edit-save-button`
    attach TimesCancelButton to `edit-cancel-button`
    attach TimesHelpButton to `edit-help-button`
    
    ! Convert 'until' to 'from' for all periods
    put the json count of Periods into NPeriods
	if NPeriods is not 1
    begin
    	set the elements of Temps to NPeriods
        put 0 into P
        while P is less than NPeriods
        begin
        	add 1 to P giving Q
            if Q is NPeriods put 0 into Q
            put element Q of Periods into Period
            index Temps to P
            put property `temp` of Period into Temps
            put element P of Periods into Period
            add 1 to P
        end
        put 0 into  P
        while P is less than NPeriods
        begin
        	put element P of Periods into Period
        	index Temps to P
            set property `temp` of Period to Temps
            set element P of Periods to Period
        	add 1 to P
        end
    end

	put 0 into ThisPeriod
    gosub to RenderPeriods
    
    on click TimesAddButton
    begin
    	if Editing stop
        ! Adjust the target temperature of the second (previously first) element
        if the json count of Periods is 0 put `15.0` into Temp
        else
        begin
	        put element 0 of Periods into Period
            put property `temp` of Period into Temp
        end
        put `{}` into Period
        set property `until` of Period to `00:00`
        set property `temp` of Period to Temp
        append Period to Periods
        gosub to SortPeriods
        gosub to RenderPeriods
    end
    
    on click TimesSaveButton
    begin
        gosub to SortPeriods
        if NPeriods is greater than 1
        begin
            put 0 into P
            while P is less than NPeriods
            begin
                if P is 0 put NPeriods into Q else put P into Q
                take 1 from Q
                index Temps to Q
                put element P of Periods into Period
                set property `temp` of Period to Temps
                set element P of Periods to Period
                add 1 to P
            end
        end
		set property `events` of RoomSpec to Periods
        set element ClickIndex of Rooms to RoomSpec
        gosub to CopyRoomsToMap
        clear MainPanel
        go to Exit
    end
    
    on click TimesCancelButton
    begin
       	clear MainPanel
        clear Changed
       	go to Exit
    end
    
    on click TimesHelpButton
    begin
        clear MainPanel
        put `Help home PeriodEdit` into Result
        exit
    end
    
    put `{}` into RequestData
    set property `action` of RequestData to empty
    set property `roomnumber` of RequestData to ClickIndex

	stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	When an info panel is tapped it is replaced by an editor.
OnClickPeriodInfo:
	if Editing stop
    put the index of PeriodInfo into ThisPeriod
    go to ShowEditor

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 	When editing finishes, save the period.
SaveCurrentData:
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 	Show an period editor. There's only a single instance.
ShowEditor:
	set Editing
    index PeriodContent to ThisPeriod
    clear PeriodContent
    put PeriodEditorWebson into Webson
    replace `/INDEX/` with ThisPeriod in Webson
    render Webson in PeriodContent
    attach HourUpButton to `hour-up`
    attach HourDownButton to `hour-down`
    attach MinuteUpButton to `minute-up`
    attach MinuteDownButton to `minute-down`
    attach TempUpButton to `temp-up`
    attach TempDownButton to `temp-down`
    attach HourField to `hour-text`
    attach MinuteField to `minute-text`
    attach TempField to `temp-text`
    attach PeriodSave to `period-save`
    attach PeriodDelete to `period-delete`

    put element ThisPeriod of Periods into Period
    put `` cat property `temp` of Period into TempProperty
    put property `until` of Period into TimeProperty
    put the value of left 2 of TimeProperty into HourValue
    put the value of right 2 of TimeProperty into MinuteValue
    if the position of `.` in TempProperty is -1 multiply the value of TempProperty by 10 giving TempValue
    else
    begin
        split TempProperty on `.` giving Value
        index Value to 0
        multiply the value of Value by 10 giving TempValue
        index Value to 1
        add the value of Value to TempValue
    end
    gosub to ShowValues

    on click HourUpButton
    begin
        if HourValue is 23 put -1 into HourValue
        add 1 to HourValue
        gosub to ShowValues
    end

    on click HourDownButton
    begin
        if HourValue is 0 put 24 into HourValue
        take 1 from HourValue
        gosub to ShowValues
    end

    on click MinuteUpButton
    begin
        if MinuteValue is 55 put -5 into MinuteValue
        add 5 to MinuteValue
        gosub to ShowValues
    end

    on click MinuteDownButton
    begin
        if MinuteValue is 0 put 60 into MinuteValue
        take 5 from MinuteValue
        gosub to ShowValues
    end

    on click TempUpButton
    begin
        add 5 to TempValue
        gosub to ShowValues
    end

    on click TempDownButton
    begin
        if TempValue is 0 stop
        take 5 from TempValue
        gosub to ShowValues
    end

    on click PeriodSave gosub to CancelEditing

    on click PeriodDelete
    begin
        attach DialogPanel to `dialog-panel`
        rest get Webson from `/resources/webson/dialog-confirm.json?v=` cat now
        render Webson in DialogPanel
        attach DialogTitle to `dialog-title`
        attach DialogText to `dialog-text`
        attach DialogButton1 to `dialog-button1`
        attach DialogButton2 to `dialog-button2`
        set the content of DialogTitle to `Confirm deletion`
        set the content of DialogText to `Are you sure you want to remove this row?`
        set the content of DialogButton1 to `Yes`
        set the content of DialogButton2 to `No`
        on click DialogButton1
        begin
            clear DialogPanel
            json delete element ThisPeriod of Periods
        	gosub to RenderPeriods
            clear Editing
        end
        on click DialogButton2 clear DialogPanel
    end
	stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Cancel editing and sort the periods
CancelEditing:
	set Changed
    clear Editing
	gosub to ShowValues
    gosub to SortPeriods
    gosub to RenderPeriods
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Show the current values for this period
ShowValues:
    put `0` cat HourValue into Value
    set the content of HourField to right 2 of Value
    put right 2 of Value into Time
    put `0` cat MinuteValue into Value
    set the content of MinuteField to right 2 of Value
    put Time cat `:` cat right 2 of Value into Time

    divide TempValue by 10 giving Temp
    put Temp cat `.` cat TempValue modulo 10 into Temp
    put Temp cat `&deg;C` into Value
    set the content of TempField to Value

    put element ThisPeriod of Periods into Period
    set property `until` of Period to Time
    set property `temp` of Period to Temp
    set element ThisPeriod of Periods to Period
	return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 	Sort the periods
SortPeriods:
    put the json count of Periods into NPeriods
    if NPeriods is less than 2 return
    push P
    push Q
    set Unsorted
    while Unsorted
    begin
    	clear Unsorted
        put 1 into P
   	    while P is less than NPeriods
        begin
        	take 1 from P giving Q
            put element Q of Periods into Period
            put property `until` of Period into T
            gosub to ParseTime
            put T into T1
            put element P of Periods into Period
            put property `until` of Period into T
            gosub to ParseTime
            put T into T2
            if T2 is less than T1
            begin
            	! Period P is out of sequence
                ! Swap it 
               	put Period into Period2
                set element P of Periods to element Q of Periods
                set element Q of Periods to Period2
               	set Unsorted
            	set Changed
            end
        	add 1 to P
        end
    end
    pop Q
    pop P
	return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Rotate all the periods to adjust between 'from' and 'until'.
RotatePeriods:
	push P
    push Q
    put the json count of Periods into NPeriods
	if NPeriods is greater than 1
    begin
        put 0 into P
        while P is less than NPeriods
        begin
            if P is 0 put NPeriods into Q
            take 1 from Q
            index Temps to Q
            put element P of Periods into Period
            set property `temp` of Period to Temps
            add 1 to P
        end
    end
    pop Q
    pop P
	return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Reender all the periods.
RenderPeriods:
	push P
    put the json count of Periods into NPeriods
    set the elements of PeriodContent to NPeriods
    set the elements of PeriodInfo to NPeriods
    set the elements of Time to NPeriods
    set the elements of Temp to NPeriods
    set the elements of Temps to NPeriods
    ! Create the periods
    clear EditTimes
    put 0 into P
    while P is less than NPeriods
    begin
        index PeriodContent to P
    	index PeriodInfo to P
    	index Temps to P
        ! Build an array of temperatures
        put element P of Periods into Period
        put property `temp` of Period into Temps
       	put PeriodWebson into Webson
        replace `/INDEX/` with P in Webson
        render Webson in EditTimes
        attach PeriodContent to `period-content-` cat P
        add 1 to P
    end
    ! Show the period info
    put 0 into P
    while P is less than NPeriods
    begin
    	gosub to RenderPeriod
        add 1 to P
    end
    pop P
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 	Render a single period.
RenderPeriod:
    put PeriodInfoWebson into Webson
    replace `/INDEX/` with P in Webson
    index Temps to P
    index PeriodInfo to P
    index PeriodContent to P
    clear PeriodContent
    render Webson in PeriodContent

    put element P of Periods into Period
    put property `until` of Period into Time
    put Temps into Temp
    attach PeriodInfo to `period-info-` cat P
    set the content of PeriodInfo to `From ` cat Time cat `: Target = ` cat Temp cat `&deg;C`
    on click PeriodInfo go to OnClickPeriodInfo
	return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 	Parse the time, converting it to minutes.
ParseTime:
    put the value of left 2 of T into HV
    put the value of right 2 of T into MV
    multiply HV by 60 giving T
    add MV to T
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Get the current room set from the map
GetCurrentRooms:
   	put property `profiles` of Map into Profiles
    put element CurrentProfile of Profiles into Profile
    put property `rooms` of Profile into Rooms        
	return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Copy the current room set to the map
CopyRoomsToMap:
   	put property `profiles` of Map into Profiles
    put element CurrentProfile of Profiles into Profile
    set property `rooms` of Profile to Rooms  
    set element CurrentProfile of Profiles to Profile
    set property `profiles` of Map to Profiles
	return

Exit:
	put `{}` into Result
	if Changed
    begin
    	set property `request` of Result to `Update`
       	set property `action` of RequestData to `periods`
        set property `periods` of RequestData to Periods
        set property `data` of Result to RequestData
    end
    else
    begin
    	set property `request` of Result to `Redraw`
    end
    exit