!	Mode selection
!	Manages the Mode dialog that appears when the user clicks a Mode button on the main UI.
!	There are 3 primary modes:
!	1 Timed: The radiator is only on at certain times of the day (depending on the chosen profile).
!	At those times the system will attempt to match the temperature given for the current period.
!	2 Always ON: The system will attempt to match the temperature shown in the Mode dialog for that room.
!	Note that this is NOT a full manual override; just that there is no timing involved.
!	3 Always OFF: The radiator value will never open.
!	Other features handled here are Advance and Boost. Advance moves to the next timing period. Timing mode
!	must be selected. Boost operates when the system is in Timed or OFF mode, by temporarily going into
!	ON mode for the duration of the boost, then returning to the previous mode.

	script Mode
    
    import div MainPanel
    	and div ModePanel
    	and button ModeButton
        and variable Mode
        and variable Map
    	and variable ClickIndex
        and variable Sensors
        and variable Result
    
    div ButtonM
    div ButtonO
    div ButtonC
    div ButtonH
    div ButtonT
    div OnUpButton
    div OnDownButton
    div OnTarget
    div Boost1Button
    div Boost2Button
    div Boost3Button
    div Boost4Button
    div Boost1Text
    div Boost2Text
    div Boost3Text
    div Boost4Text
    div AdvanceButton
    div AdvanceText
    div Mask
    div BannerMask
    div TitleMask
    div MaskLayer
	img TimedEditIcon
    img AdvanceIcon
    variable Host
    variable CurrentProfile
    variable Profiles
    variable Profile
    variable Rooms
    variable RoomSpec
    variable SensorIP
    variable Sensor
    variable Target
    variable RoomName
    variable CurrentMode
    variable PeriodEditScript
    variable ModeWebson
    variable Integer
    variable Password
    variable Server
    variable Advance
    variable MAC
    variable Dot
    variable OnUD
    variable Boost
    variable BoostIsOn
    variable RequestData
    variable L
    variable T
    variable X
    
!    debug step

	get Host from storage as `host`

	put empty into PeriodEditScript
    get Server from storage as `server`
    get MAC from storage as `MAC`
    get Password from storage as `password`

    index Mode to the index of ModeButton
   	put Mode into CurrentMode
    wait 20 ticks

	clear ModePanel
    gosub to GetCurrentRooms
    put element ClickIndex of Rooms into RoomSpec
    put property `name` of RoomSpec into RoomName
!    put property `relayType` of RoomSpec into RelayType
!    if RelayType is `Manual`
!    	rest get ModeWebson from `/resources/webson/mode-m.json?v=` cat now
!    else rest get ModeWebson from `/resources/webson/mode.json?v=` cat now
	rest get ModeWebson from `/resources/webson/mode.json?v=` cat now
    replace `/ROOM/` with RoomName in ModeWebson
	render ModeWebson in ModePanel
    attach ButtonT to `mode-timed`
    attach ButtonM to `mode-on`
    attach ButtonO to `mode-off`
    attach ButtonC to `mode-cancel`
    attach ButtonH to `mode-help`
!    if RelayType is not `Manual`
    begin
    	attach OnDownButton to `on-down`
    	attach OnUpButton to `on-up`
    	attach OnTarget to `on-target`
    end
    attach Boost1Button to `boost-1`
    attach Boost2Button to `boost-2`
    attach Boost3Button to `boost-3`
    attach Boost4Button to `boost-4`
    attach Boost1Text to `boost-1-text`
    attach Boost2Text to `boost-2-text`
    attach Boost3Text to `boost-3-text`
    attach Boost4Text to `boost-4-text`
    attach TimedEditIcon to `timed-edit`
    attach AdvanceButton to `timed-advance`
    attach AdvanceText to `timed-advance-text`
    attach AdvanceIcon to `timed-advance-icon`
    attach Mask to `top-level-mask`
    attach BannerMask to `banner-mask`
    attach TitleMask to `title-mask`
    attach MaskLayer to `mask-layer`

!	if RelayType is not `Manual`
    begin
    	put property `target` of RoomSpec into Target
		set the content of OnTarget to Target cat `&deg;C`
    end

    clear BoostIsOn
    put 0 into Boost
	set style `color` of Boost1Text to `green`

	set style `visibility` of ModePanel to `visible`
    put property `sensor` of RoomSpec into SensorIP
    put property SensorIP of Sensors into Sensor
    put `` cat property `advance` of Sensor into Advance
    if Advance is empty put `-` into Advance
    if Advance is `-`
    begin
!        set style `color` of AdvanceText to `black`
		set style `display` of AdvanceText to `block`
        set style `display` of AdvanceIcon to `none`
    end
    else
    begin
!        set style `color` of AdvanceText to `green`
		set style `display` of AdvanceText to `none`
        set style `display` of AdvanceIcon to `block`
    end
    on click ButtonT go to SelectTimed
    on click ButtonM go to SelectOn
    on click ButtonO go to SelectOff
    on click ButtonC go to SelectCancel
    on click ButtonH go to SelectHelp
!    if RelayType is not `Manual`
    begin
    	on click OnDownButton go to OnDown
    	on click OnUpButton go to OnUp
    end
    on click Boost1Button go to Boost1
    on click Boost2Button go to Boost2
    on click Boost3Button go to Boost3
    on click Boost4Button go to Boost4
    on click TimedEditIcon go to ShowTimes
    on click AdvanceButton go to DoAdvance
    
    put `{}` into Result
    put `{}` into RequestData
    set property `action` of RequestData to empty
    set property `roomnumber` of RequestData to ClickIndex

	stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	'On' Up and Down buttons
OnDown:
	clear OnUD
    go to OnUpDown

OnUp:
	set OnUD

OnUpDown:
	if Target is empty put `0.0` into Target else put `` cat Target into Target
    put the position of `.` in Target into Dot
    if Dot is -1 multiply the value of Target by 10 giving T
    else
    begin
         put left Dot of Target into Integer
         multiply the value of Integer by 10 giving T
         add 1 to Dot
         add the value of from Dot of Target to T
    end
    if OnUD add 5 to T else if Target is not `0.0` take 5 from T
    if T is less than 10 put `0` cat T into T
    else put `` cat T into T
    put the length of T into L
    take 1 from L
    put left L of T into X
    put X cat `.` into X
    put X cat from L of T into Target
    set the content of OnTarget to Target cat `&deg;C`
    stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Show the schedule times
ShowTimes:
    set style `display` of Mask to `none`
    set style `display` of BannerMask to `block`
    set style `display` of TitleMask to `block`
    set style `display` of MaskLayer to `block`
    set style `visibility` of ModePanel to `hidden`
    if PeriodEditScript is empty
    	rest get PeriodEditScript from `/resources/ecs/periodedit.ecs?v=` cat now
    run PeriodEditScript with MainPanel and Map and CurrentProfile and ClickIndex and Result
    set style `display` of MaskLayer to `none`
    exit

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Send an advance or cancel request
DoAdvance:
	if Advance is `-` put `A` into Advance else put `C` into Advance
    set property `advance` of RoomSpec to Advance
    set property `advance` of RequestData to Advance
   	put `timed` into Mode
    go to SelectMode

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select timed mode
SelectTimed:
   	put `timed` into Mode
    set property `advance` of RequestData to `-`
    go to SelectMode

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	'Boost' buttons
Boost1:
	gosub to ResetBoostButtons
    set style `color` of Boost1Text to `#508e62`
    put 0 into Boost
	go to SelectBoost

Boost2:
	gosub to ResetBoostButtons
    set style `color` of Boost2Text to `#508e62`
    put 30 into Boost
	go to SelectBoost

Boost3:
	gosub to ResetBoostButtons
    set style `color` of Boost3Text to `#508e62`
    put 60 into Boost
	go to SelectBoost

Boost4:
	gosub to ResetBoostButtons
    set style `color` of Boost4Text to `#508e62`
    put 120 into Boost
	go to SelectBoost

ResetBoostButtons:
	set style `color` of Boost1Text to `black`
	set style `color` of Boost2Text to `black`
	set style `color` of Boost3Text to `black`
	set style `color` of Boost4Text to `black`
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select 'boost' mode
SelectBoost:
	if CurrentMode is `boost`
    begin
        if Boost is 0
        begin
        	put property `prevmode` of RoomSpec into Mode
        	clear BoostIsOn
        end
        else set BoostIsOn
        go to SelectMode
    end
   	if Boost is 0 go to SelectCancel
   	else
    begin
    	if CurrentMode is not `boost` set property `prevmode` of RoomSpec to CurrentMode
        put `boost` into Mode
        set BoostIsOn
       	go to SelectMode
    end

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select 'on' mode
SelectOn:
    put `on` into Mode
    clear BoostIsOn
    set property `advance` of RoomSpec to `-`
    go to SelectMode

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select off mode
SelectOff:
    put `off` into Mode
    clear BoostIsOn
    set property `advance` of RoomSpec to `-`
    go to SelectMode

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select cancel
SelectCancel:
    set style `visibility` of ModePanel to `hidden`
    set property `request` of Result to `Redraw`
    exit

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select help
SelectHelp:
    set style `visibility` of ModePanel to `hidden`
    set property `request` of Result to `Help`
    set property `data` of Result to `home Mode`
    exit

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Select the mode and exit
SelectMode:
	set property `action` of RequestData to `mode`
	set property `mode` of RequestData to Mode
    if Mode is `timed`
    begin
        set property `boost` of RoomSpec to 0
    	clear BoostIsOn
    end
    else if Mode is `on`
    begin
    	set property `advance` of RoomSpec to `none`
    	set property `target` of RequestData to Target
    end
    else if Mode is `boost`
    begin
    	set property `advance` of RoomSpec to `none`
    	if BoostIsOn
        begin
			set property `boost` of RequestData to `B` cat Boost
    		set property `target` of RequestData to Target
        end
        else set property `boost` of RequestData to empty
    end
    set style `visibility` of ModePanel to `hidden`
    set property `request` of Result to `Update`
	set property `data` of Result to RequestData
	exit

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Get the current room set from the map
GetCurrentRooms:
	put property `actual` of Sensors into CurrentProfile
    if CurrentProfile is empty put 0 into CurrentProfile
    put property `profiles` of Map into Profiles
    put element CurrentProfile of Profiles into Profile
    put property `rooms` of Profile into Rooms        
	return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	Copy the current room set to the map
CopyRoomsToMap:
	put property `actual` of Sensors into CurrentProfile
    put property `profiles` of Map into Profiles
    put element CurrentProfile of Profiles into Profile
    set property `rooms` of Profile to Rooms  
    set element CurrentProfile of Profiles to Profile
    set property `profiles` of Map to Profiles
    return