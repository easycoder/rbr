## Raspberry Pi System Controller

The Raspberry Pi  has been in production for several years and the latest models are quite powerful, but the controller software will run on some of the early models. For example a Model B+ can be bought for around £25, with a case costing another £5 or so. Add to this an SD card of at least 8GB, a low-cost USB power supply and a cable.

The following instructions have been tested on a Model B+ and on a Pi 2 Model B. These are both older models; it can safely be assumed that later models will present no problems.

## Pi Model B+ networking

There is an issue with networking on the Model B+ when running the latest "bullseye" version of Raspbian. Basically, wifi fails to start automatically. This may be an issue with certain wifi interfaces, but if you want to use this model the safest thing to do is to connect to your router with an Ethernet cable. (This may be a better and more reliable solution in any case.) Later Pi models are happy with wifi, and all the more recent ones come with wifi built in. The instructions that follow allow you to choose wifi or Ethernet according to your preferences.

The system controller runs from an SD card (8GB or more) that contains the operating system and all the RBR files. The simplest way to set this up is to run the [Raspberry Pi Imager](https://www.raspberrypi.com/news/raspberry-pi-imager-imaging-utility/) on your computer. Here's what it looks like:
~img:imager-1.png:center 70%~
First choose the operating system:
~img:imager-2.png:center 70%~
Choose "Raspberry Pi OS (other)"
~img:imager-3.png:center 70%~
Choose "Raspberry Pi OS Lite (32-bit)"

Then click to select the SD card to write to:
~img:imager-4.png:center 70%~

Now click the gear icon and do the advanced settings. Use these images as a guide:
~img:imager-5.png:center 70%~
~img:imager-6.png:center 70%~
~img:imager-7.png:center 70%~

The section about wifi is only needed if you intend to use that to connect. Ethernet doesn't require any connection details.

Click to download the image and write it to the SD card. When it has completed, close the Imager, then eject the SD card from your computer, put it into the Pi and power it up. The initial boot can take several minutes, so be patient. If you connect a TV monitor to the HDMI port on the Pi you will see repeated restarts until it finally settles down.

## Setting up the system controller

Here you may need to have your Internet router's manual to hand. If you don't have one, do an online search for the model name of your router. This will also tell you how to log in.

Type the address of your router control panel into your browser. The address varies from one model to another but it's most likely to be one of
```
http://192.168.0.1
http://192.168.1.1
```
A home router manages the devices that connect to it, assigning each one an IP address using a system called DHCP. The RBR system works best if this feature is avoided, since its components need to have fixed known addresses and the addresses supplied by the router could change without warning. In your router admin there will be an option to set the range of addresses to be used by the DHCP server. Make sure this is set to a restricted range - we suggest 200 to 254 as the final part of the IP address. All other addresses will then be free for devices to be allocated as you please.

Note: If you already have equipment such as a network printer and its current address is outside the range you gave above, you may have to set the device up again.

At this point it may be best to restart the router and also the Raspberry Pi. Log into the router again.

One of the sections of your router's admin will show you all the devices connected to it. Some of these will have names; you might recognize your computer and printer, for example. Once the system controller has booted up it will present itself as `rbr` (or whatever you set the hostname to in the Advanced settings of Imager). Make a note of its address.

On your computer, fire up a terminal emulator. On Windows you can use PuTTY; on Mac or Linux use the text console. At the command prompt type
```
ssh pi@xx.xx.xx.xx
```
where `xx.xx.xx.xx` is the IP address you found in your router admin screen. You'll be prompted for the password you gave in the Advanced settings. After a few seconds you'll see the standard greeting.

Once all this is done, type
```
wget https://rbrheating.com/setup
```
This will download to the Pi a small script that sets up your system. To run the script, type
```
sh setup
```
This may well take quite a long time to run (tens of minutes) and will display a huge amount of technical information on the console as it runs. When it has finished you can type
```
ls
```
to see all the files that have been added to your Pi.

Note to users outside the UK: The Python script `ec_timestamp.py` is set up for British time and will need to be adjusted for other countries.

The next step is to set up networking. There are 2 options, depending if you want to use Ethernet or Wifi. As noted above, the low-cost Pi Model B+ is best used with a direct Ethernet connection to the router. Type one of the following commands:
```
sh setup-eth0-rpi.sh
sh setup.wlan0-rpi.sh
```
The system will ask you a couple of questions regarding your network settings, in particular to choose the IP address you would like to use for your system controller. As stated above, pick an address that's outside the range handed out by the router's DHCP, but where the first 3 groups of digits are unchanged. Once this is done the Pi will reboot automatically and you will have to log in again, this time using your chosen IP address.

Although the questions are very simple, take care or you may put the system firmware into a state from which you will be unable to recover. The worst case would require you to reprogram the SD card and start again. If you are unsure what to type at any point, [email us](mailto:info@rbrheating.com) to ask for help.

To test if your system controller is connected to the Internet, type
```
ping rbrheating.com
```
This should give a stream of responses from the remote server (type Control-C to stop it). If it fails there's something wrong with the settings; most likely the DNS server address. If you are relatively experienced you can try editing the configuration files by hand, but if you find all this is too complex, let us know by sending us an email and we'll try to help.

To check the controller software is running, type
```
ps x
```
which lists all the 'processes' running on the controller. You should see one called `python3 rbr.py`. Wihout this, the controller will not respond to messages from thermometer modules. You should also see `python3 easycoder.py rbr.ecs` nearly every time you run `ps x`; this is a program that runs every few seconds to monitor temperature changes and turn radiators on or off according to the ruless that have been set up. If you see both of these processes most if not all of the time, the system is probably behaving as it should.

That's the system controller done. You can log in to it at any time but in practice there's very little of interest there. The next job is to set up your room kits. Before you do so, make a note of the contents of 2 files on your system controller, both of which will be needed when you first run the webapp on your phone:

`mac` contains the unique address of your system It comprises 6 pairs of digits (and the letters A to F) separated by colons.

`password` is the password handed out by the web server when your system registered itself. It comprises 6 digits.

Keep these items safe and do not give them to anyone unless you want them to be able to manage your system.
