!	RBR-Now configuration utility

	script RBRConfig

    layout Layout
    layout Row
    layout Columns
    column Column
    window Window
    stack Stack
    variable Config
    variable AccessPoints
    variable HostName
    variable HostSSID
    variable HostPassword
    variable DevicePassword
    variable Connected
    variable IPAddr
    variable Master
    variable MasterSSID
    variable MasterIPAddr
    variable ScanForMaster
    variable ScanComplete
    variable MasterInfo
    variable MasterName
    variable Name
    variable SSID
    variable MAC
    variable List
    variable Info
    variable APInfo
    variable Files
    variable FileName
    variable FileSize
    variable Sequence
    variable Start
    variable Finish
    variable Total
    variable Segment
    variable Length
    variable URL
    variable Result
    variable Content
    variable D
    variable F
    variable N
    variable P

!    debug step

    load Config from `.config.json`

    put property `ssid` of Config into HostSSID
    put property `password` of Config into HostPassword
    if Config has property `master`
    begin
        put property `master` of Config into Master
        put property `ssid` of Master into MasterSSID
        put property `ipaddr` of Master into MasterIPAddr
        put property `name` of Master into MasterName
    end
    else
    begin
        put json `{}` into Master
        set property `ssid` of Master to empty
        set property `ipaddr` of Master to empty
        set property `name` of Master to empty
        set property `master` of Config to Master
        save Config to `.config.json`
    end

    clear Connected
    put empty into HostName
    put empty into DevicePassword
    put empty into IPAddr

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Draw the UI

    init Layout     ! The main layout
    init Columns    ! The two columns
    init Column     ! A reusable column

    init Row        ! A reusable layout
    add Button button_text `Find Master` and size `20 1` to Row
    add Row to Column
    init Row
    add Button button_text `Find Slaves` and size `20 1` to Row
    add Row to Column
    init Row
    add Button button_text `Select Master` and size `20 1` to Row
    add Row to Column
    init Row
    add Button button_text `Select Slave` and size `20 1` to Row
    add Row to Column
    init Row
    add Button button_text `Update Device` and size `20 1` to Row
    add Row to Column
    init Row
    add Button button_text `Exit` and size `20 1` to Row
    add Row to Column
    add Column to Columns

    init Column
    init Row
    add Text text `Master:` and size `8 1` to Row
    add Text default_text `None` and key `-MASTER-` and expand_x true to Row
    add Row to Column

    init Row
    add Listbox key `-APLIST-` and size `60 10` to Row
    add Row to Column

    init Row
    add Text text `Device:` and size `6 1` to Row
    add Text key `-DEVICE-` and expand_x true to Row
    add Row to Column

    init Row
    add Text text `` and key `-STATUS-` to Row
    add Row to Column

    add Column expand_x true to Columns
    add Columns to Layout

    create Window `RBR-Now Configurator`
        layout Layout

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    set property `value` of `-MASTER-` in Window to MasterName cat ` ` cat MasterSSID cat ` ` cat MasterIPAddr
    if MasterSSID is empty set property `disabled` of `Select Master` in Window to true
    set property `disabled` of `Select Slave` in Window to true
    set property `disabled` of `Update Device` in Window to true

    on event `Find Master` in Window
    begin
        gosub to FindMaster
        stop
    end

    on event `Find Slaves` in Window
    begin
        gosub to FindSlaves
        stop
    end

    on event `Select Master` in Window
    begin
        set property `value` of `-DEVICE-` in Window to MasterInfo
        set property `disabled` of `Update Device` in Window to false
    end

    on event `Set Slaves` in Window
    begin
        put the value of key `-APLIST-` in Window into SSID
        set property `value` of `-DEVICE-` in Window to SSID
        set property `disabled` of `Update Device` in Window to false
    end

    on event `Update Device` in Window go to Update

    on event `Exit` in Window
    begin
        close Window
        exit
    end

    stop

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Scan the local network
FindMaster:
    set property `value` of `-STATUS-` in Window to `Scanning for the master device`
    set ScanForMaster
    gosub to ScanNetwork
!    if MasterIPAddr is empty gosub to FindMasterIP
    if MasterIPAddr is not empty
    begin
        print `Master IP: ` cat MasterIPAddr
        set property `disabled` of `Select Master` in Window to false
    end
    stop

FindSlaves:
    print `Find the slaves`
    set property `value` of `-STATUS-` in Window to `Scanning for slave devices`
    clear ScanForMaster
    gosub to ScanNetwork
    stop

ScanNetwork:
    clear ScanComplete
    put system `nmcli device wifi list` into List
    split List
    put json `[]` into AccessPoints
    put 1 into N
    while N is less than the elements of List
    begin
        index List to N
        put List into SSID
        if left 1 of SSID is `*` begin end
        else
        begin
            put trim SSID into SSID
            put the position of ` ` in SSID into P
            put from P of SSID into SSID
            put trim SSID into SSID
            put the position of ` ` in SSID into P
            put left P of SSID into SSID
!            log SSID
            if left 7 of SSID is `RBR-Now`
            begin
                set property `value` of `-STATUS-` in Window to `Connecting to ` cat SSID
                gosub to ConnectToAP
                if ScanComplete go to Reconnect
            end
        end
        increment N
    end

Reconnect:
    print `Reconnect to default AP`
    set property `value` of `-STATUS-` in Window to `Reconnecting to default AP`
    system `nmcli dev wifi connect ` cat HostSSID cat ` password ` cat HostPassword
    set property `value` of `-STATUS-` in Window to `Ready`
    return

! Connect to the access point given by SSID
ConnectToAP:
!    print `Activate ` cat SSID
    set property `value` of `-STATUS-` in Window to `Activate ` cat SSID
    system `nmcli dev wifi connect ` cat SSID cat ` password 00000000`
    put system `hostname -I` into IPAddr
    put the position of the last `.` in IPAddr into D
    increment D
    put left D of IPAddr into IPAddr
    put `http://` cat IPAddr cat `1` into URL
    print `Request ` cat URL
    get APInfo from URL or go to CTAP3
    put trim APInfo into APInfo
    put APInfo into Info
    split Info on ` `
    index Info to 1
    if Info is `M`
    begin
        if ScanForMaster
        begin
            index Info to 2
            set property `name` of Master to Info
            index Info to 0
            set property `ssid` of Master to Info
            set property `value` of `-MASTER-` in Window to APInfo
            set property `disabled` of `Select Master` in Window to false
            print `Get the Master IP address from URL ` cat `/ipaddr`
            get IPAddr from URL cat `/ipaddr` or go to CTAP3
            put IPAddr into MasterIPAddr
            set property `ipaddr` of Master to MasterIPAddr
            set property `master` of Config to Master
            save Config to `.config.json`
            print `Master config: ` cat Master
            set ScanComplete
            return
        end
    end
    else if Info is `S`
    begin
        if not ScanForMaster
        begin
            append APInfo to AccessPoints
            set property `values` of `-APLIST-` in Window to AccessPoints
            set property `disabled` of `Select Slave` in Window to false
        end
    end
CTAP3:
    print `Failed to interrogate ` cat SSID
    set property `value` of `-STATUS-` in Window to `Failed to interrogate ` cat SSID
    return

! Search for the address used by the Master
FindMasterIP:
    put system `hostname -I` into IPAddr
    put the position of the last `.` in IPAddr into N
    increment N
    put `http://` cat left N of IPAddr into IPAddr
    put 1 into N
    while N is less than 255
    begin
        print `Probing ` cat IPAddr cat N
        set property `value` of `-STATUS-` in Window to `Locating Master: Probing ` cat IPAddr cat N
        get Info from IPAddr cat N timeout 1 or goto CTM2
        print `Response from ` cat IPAddr cat `: ` cat left 40 of Info
        put Info into APInfo
        split APInfo on ` `
        index APInfo to 2
        put APInfo into Name
        put Info into Master
        set property `value` of `-MASTER-` in Window to Master
        set property `value` of `-STATUS-` in Window to `Found ` cat Name
        put `http://` cat IPAddr into MasterIPAddr
        return
    CTM2:
        wait 50 ticks
        increment N
    end
    set property `value` of `-STATUS-` in Window to `Master not found`
    return

Update:
    split SSID on ` `
    index SSID to 0
    print `Updating ` cat SSID
    set property `value` of `-STATUS-` in Window to `Updating ` cat SSID cat `... `
    put SSID into MAC
    print `Slave MAC: ` cat MAC

    set the encoding to `hex`

    load Files from `files.txt`
    split Files
    put 0 into F
    while F is less than the elements of Files
    begin
        index Files to F
        put trim Files into FileName
        if FileName is not empty gosub to UpdateOne
        increment F
    end
    stop

UpdateOne:
    if file FileName exists begin end
    else
    begin
        print `File ` cat FileName cat ` does not exist`
        return
    end
    print `Update ` cat FileName
    load Content from FileName
    put the length of Content into FileSize
    set property `value` of `-STATUS-` in Window to `Updating ` cat FileName cat ` (size=` cat FileSize cat `)`

    put 0 into Sequence
    put 0 into Start
    put 0 into Total
    while Start is less than FileSize
    begin
        if Finish is greater than FileSize put FileSize into Finish
        add 100 to Start giving Finish
        put from Start to Finish of Content into Segment
        put the length of Segment into Length
        add Length to Total
        put encode Segment into Segment
        put MasterIPAddr cat `/?mac=` cat MAC cat `&msg=part:`
            cat Sequence cat `,text:` cat Segment into URL
!        print URL
        get Result from URL or go to UpdateFailed
        if Result is not Length
        begin
            set property `value` of `-STATUS-` in Window to `Failed to send part ` cat Sequence
            go to UpdateFailed
        end
        put Finish into Start
        increment Sequence
    end

    get Result from MasterIPAddr cat `/?mac=` cat MAC cat `&msg=save:` cat FileName
        or go to UpdateFailed
    if Result is not Total
        set property `value` of `-STATUS-` in Window to `Mismatched length: ` cat Total cat ` - ` cat Result
    return

UpdateFailed:
    print `Update failed`
    return

