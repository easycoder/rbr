!   profiles.ecs

    script Profiles

    import variable Map
        and text ProfilesText
    
    file File
    module KeyboardModule
    text ProfileText
    variable Profiles
    variable Profile
    variable ProfilesScript
    variable ProfileTemplate
    variable ProfileList
    variable NProfiles
    variable CurrentProfile
    variable Name
    variable Top
    variable Height
    variable Clicked
    variable Font
    variable NewFont
    variable FontFace
    variable FontSize
    variable FontWeight
    variable P

!    debug step

!    print ProfilesScript

!    put json ProfilesScript into ProfilesObject
    
    on click ProfilesText 
    begin
        gosub to ShowProfiles
    end

    detach
    stop

ShowProfiles:
    open File `picson/profile.json` for reading
    read ProfileTemplate from File
    close File

    ! Build an empty list of profiles
    put property `profile` of Map into CurrentProfile
    put property `profiles` of Map into Profiles
    put the count of Profiles into NProfiles
    put json `[]` into ProfileList
    put 0 into Top
    put 0 into P
    while P is less than NProfiles
    begin
        put ProfileTemplate into Profile
        replace `/NAME/` with `"profile-` cat P cat `"` in Profile
        replace `/TOP/` with `` cat Top in Profile
        append json Profile to ProfileList
        add 50 to Top
        add 1 to P
    end

    ! Add the list to the profiles panel
    open File `picson/profiles.json` for reading
    read ProfilesScript from File
    close File
    multiply P by 50 giving Height
    replace `/HEIGHT/` with Height in ProfilesScript
    replace `/PANELS/` with stringify ProfileList in ProfilesScript
    render ProfilesScript

    attach ProfileText to `profile-0`
    put attribute `font` of ProfileText into Font
    ! Extract the font face
    if left 1 of Font is `"`
    begin
        put `"` into FontFace
        put from 1 of Font into Font
        while left 1 of Font is not `"`
        begin
            put FontFace cat left 1 of Font into FontFace
            put from 1 of Font into Font
        end
        put FontFace cat `"` into FontFace
        put from 2 of Font into Font
    end
    else
    begin
        put the position of ` ` in Font into P
        put left P of Font into FontFace
        add 1 to P
        put from P of Font into Font
    end
    ! Extract the font size and weight
    put the position of ` ` in Font into P
    put left P of Font into FontSize
    add 1 to P
    put from P of Font into FontWeight

    print FontFace cat ` ` cat FontSize cat ` ` cat FontWeight

!   Fill the profiles panel with the names of the profiles
PopulateProfilesPanel:
    put 0 into P
    while P is less than NProfiles
    begin
        attach ProfileText to `profile-` cat P
        put element P of Profiles into Profile
        put property `name` of Profile into Name
        set the text of ProfileText to Name
        if P is CurrentProfile
        begin
            set the font of ProfileText to FontFace cat ` ` cat FontSize cat ` bold`
            set the fill of ProfileText to `green`
        end
        else
        begin
            set the font of ProfileText to FontFace cat ` ` cat FontSize cat ` ` cat FontWeight
            set the fill of ProfileText to `black`
        end
        on click ProfileText
        begin
            put the clicked element into Clicked
            print Clicked
        end
        add 1 to P
    end