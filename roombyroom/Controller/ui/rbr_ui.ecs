!   rbr-ui.ecs

    script RBR_UI

    use graphics
    
    import plugin RBR_UI from rbr_ui.py

    rbrwin Window
    room Room
    element Banner
    element NameAndProfiles
    button Hamburger
    button ModeButton
    button ToolsButton
    modeDialog ModeDialog
    ssh Controller
    module Module
    variable IsLocal
    variable RamDisk
    variable WindowWidth
    variable WindowHeight
    variable RoomHeight
    variable Title
    variable Name
    variable Mode
    variable Map
    variable Keys
    variable CurrentProfile
    variable Profiles
    variable Profile
    variable SystemData
    variable Rooms
    variable RoomSpec
    variable RoomData
    variable Choices
    variable Choice
    variable Advance
    variable Tick
    variable Result
    variable Request
    variable Data
    variable Value
    variable R
    variable T

!    debug step

    init graphics

    put 1000 into WindowHeight
    put 582 into WindowWidth
    divide WindowHeight by 12 giving RoomHeight
    put 0 into Tick

    put `/mnt/data/` into RamDisk
    if file RamDisk cat `map` exists
    begin
        log `Running locally`
        set IsLocal
        put empty into Title
    end
    else
    begin
        log `Running remotely`
        clear IsLocal
        set Controller
            host `192.168.1.109`
            user `linaro`
            password `r00m8Yr00m`
        put `RBR` into Title
    end

    create Window title Title size WindowWidth WindowHeight

    gosub to Refresh

    show Window

    start graphics
    on tick
    begin
        put the ticker into Tick
        if Tick modulo 200 is 0 gosub to Refresh
    end
    stop

Refresh:

    if IsLocal
    begin
        load Map from RamDisk cat `map`
        load CurrentProfile from RamDisk cat `profile`
        load SystemData from RamDisk cat `systemdata`
    end
    else
    begin
        load Map from Controller RamDisk cat `map`
        load CurrentProfile from Controller RamDisk cat `profile`
        load SystemData from Controller RamDisk cat `systemdata`
    end
    put json Map into Map
    put the value of CurrentProfile into CurrentProfile
    put json SystemData into SystemData
    put property `profiles` of Map into Profiles
    put element CurrentProfile of Profiles into Profile
    put property `rooms` of Profile into Rooms
    set the elements of Room to the count of Rooms
    set the elements of RoomData to the count of Rooms
    set the elements of ModeButton to the count of Rooms
    set the elements of ToolsButton to the count of Rooms

debug step
    clear Window
    put 0 into R
    while R is less than the count of Rooms
    begin
        put element R of Rooms into RoomSpec
        put property `name` of RoomSpec into Name
        put property Name of SystemData into RoomData
        set property `temperature` of RoomSpec to property `temperature` of RoomData
        set property `relay` of RoomSpec to property `relay` of RoomData
        gosub to CreateRoom
        increment R
    end
debug stop
    set attribute `system name` of Window to property `name` of Map
    set attribute `profile` of Window to property `name` of Profile

    attach Banner to element `banner` of Window
    attach Hamburger to element `hamburger` of Banner
    on click Hamburger go to ShowMainMenu

    attach NameAndProfiles to element `profiles` of Window
    return

ReadError:
    put Tick into T
    divide T by 100
    log `Read failure at ` cat T
    return

CreateRoom:
!    log `Create ` cat Name cat `, mode ` cat Mode
    index Room to R
    create Room
        spec RoomSpec
        height RoomHeight
        index R
    add Room to Window
!    log Room
    index ModeButton to R
    attach ModeButton to element `mode` of Room
    on click ModeButton go to HandleMode
    index ToolsButton to R
    attach ToolsButton to element `tools` of Room
    on click ToolsButton
    begin
        put attribute `index` of ToolsButton into R
        index Room to R
        log `Tools for ` cat attribute `name` of Room
    end
    return

ShowMainMenu:
    put json `[]` into Choices
    append `Set the system name` to Choices
    append `Set the request relay` to Choices
    append `Power off` to Choices
    append `Exit Application` to Choices
    append `Cancel` to Choices

    select Choice from menu `Main Menu` with Choices
    log Choice
    if Choice is element 0 of Choices go to SetSystemName
    if Choice is element 1 of Choices go to Nothing
    if Choice is element 2 of Choices go to Nothing
    if Choice is element 3 of Choices exit
    if Choice is element 4 of Choices stop
    stop

Nothing:
    stop

SetSystemName:
    run `systemName.ecs` as Module with Window and NameAndProfiles and Request
    if Request is empty stop
    log Request
    if IsLocal save stringify Request to RamDisk cat `request`
    else save stringify Request to Controller RamDisk cat `request`
    stop

!   Handle a click on one of the Mode buttons
HandleMode:
    put json `{}` into Data
    put attribute `index` of ModeButton into R
    index Room to R
    put element R of Rooms into RoomSpec
    put property `mode` of RoomSpec into Mode
    set property `target` of Data to property `target` of RoomSpec
    get Result from ModeDialog with Data
    log property `name` of RoomSpec cat `: ` cat Result
    put json `{}` into Request
    if Result is `timed` gosub to SetMode
    else if Result is `off` gosub to SetMode
    else if Result is `on`
    begin
        set property `target` of Request to property `target` of Data
        gosub to SetMode
    end
    else if left 5 of Result is `boost`
    begin
        put from 6 of Result into Value
        put left 5 of Result into Result
		set property `boost` of Request to `B` cat Value
        set property `target` of Request to property `target` of Data
        gosub to SetMode
    end
    else if Result is `Advance`
    begin
        set property `mode` of Request to `timed`
        put property `advance` of RoomSpec into Advance
        if Advance is `-` set property `advance` of Request to `A`
        else set property `advance` of Request to `C`
        gosub to SetMode
    end
    stop

SetMode:
    set property `action` of Request to `mode`
    set property `roomnumber` of Request to R
    set property `mode` of Request to Result
    log `Save ` cat Request
    if IsLocal save stringify Request to RamDisk cat `request`
    else save stringify Request to Controller RamDisk cat `request`
    return

