!   Provide details for all the relays in this system

	script RelayInfo

    import variable Map and variable Result

    div LeftButton
    div RightButton
    div RelayList
    div RelayID
    button AddRelay
    button Refresh
    image DeleteRelay
    input RoomInput
    input TypeInput
    input AddressInput
    variable Profiles
    variable Profile
    variable Rooms
    variable Room
    variable RoomCount
    variable Relays
    variable RelayCount
    variable RelayWebson
    variable RelayMap
    variable Webson
    variable Index
    variable Data
    variable Item
    variable Name
    variable Keys
    variable Count
    variable Extenders
    variable N
    variable M
    variable K

!    debug step

    attach LeftButton to `left-button`
    attach RightButton to `right-button`
    attach RelayList to `cf-relays`
    attach AddRelay to `cf-add-relay`
    attach Refresh to `cf-refresh`
    rest get RelayWebson from `/config/webson/relay.json?v=` cat now

    put property `profiles` of Map into Profiles
    put element 0 of Profiles into Profile
    put property `rooms` of Profile into Rooms
    put the json count of Rooms into RoomCount

    put `[]` into Data
    put 0 into Index
    put 0 into N
    while N is less than RoomCount
    begin
        put element N of Rooms into Room
        put property `relays` of Room into Relays
        put the json count of Relays into RelayCount
        if property `relayType` of Room is not empty
        begin
            put 0 into M
            while M is less than RelayCount
            begin
                put `{}` into Item
                set property `name` of Item to property `name` of Room
                set property `relayType` of Item to property `relayType` of Room
                set property `address` of Item to element M of Relays
                set property `room` of Item to N
                set property `relay` of Item to M
                append Item to Data
                add 1 to Index
                add 1 to M
            end
        end
        add 1 to N
    end
    put Index into RelayCount
    gosub to BuildList

    on click AddRelay
    begin
        put `{}` into Item
        set property `name` of Item to empty
        set property `relayType` of Item to empty
        set property `address` of Item to empty
        append Item to Data
        gosub to BuildList
    end

    on click Refresh
    begin
        gosub to RebuildList
        gosub to BuildList
    end

    on click LeftButton
    begin
        put `back` into Result
        exit
    end

    on click RightButton
    begin
        set style `display` of LeftButton to `none`
        set style `display` of RightButton to `none`
        gosub to CaptureFields
        gosub to CheckRoomNames
        if Result stop

        ! Clear the relay addresses
        put 0 into N
        while N is less than the json count of Rooms
        begin
            put element N of Rooms into Room
            set property `relays` of Room to `[]`
            set element N of Rooms to Room
            add 1 to N
        end
        ! Create new relay address arrays
        put 0 into N
        while N is less than the json count of Data
        begin
            put element N of Data into Item
            put property `name` of Item into Name
            put 0 into M
            while M is less than the json count of Rooms
            begin
                put element M of Rooms into Room
                if property `name` of Room is Name
                begin
                    set property `relayType` of Room to property `relayType` of Item
                    put property `relays` of Room into Relays
                    append property `address` of Item to Relays
                    set property `relays` of Room to Relays
                    set element M of Rooms to Room
                end
                add 1 to M
            end
            add 1 to N
        end

        ! Calculate how many extenders are needed
        put property `extenders` of Map into Extenders
        if Extenders is empty put `[]` into Extenders
        put the json count of Data into Count
        divide Count by 8
        add 1 to Count
        while Count is greater than the json count of Extenders
        begin
            append `{}` to Extenders
        end
        while Count is less than the json count of Extenders
        begin
            put the json count of Extenders into N
            take 1 from N
            json delete element N of Extenders
        end
        set property `extenders` of Map to Extenders

        set property `rooms` of Profile to Rooms
        set element 0 of Profiles to Profile
        set property `profiles` of Map to Profiles

        put `url=http://172.24.1.1/resources/php/rest.php/map&data=` cat Map into Data
        rest post Data to `/config/post` or alert `POST error`
        put `extender` into Result
        exit
    end
    set style `display` of LeftButton to `block`
    set style `display` of RightButton to `block`

    stop

OnDeleteRelay:
    put the index of DeleteRelay into N
    json delete element N of Data
    gosub to BuildList
    stop

RebuildList:
    gosub to CaptureFields
    gosub to CheckRoomNames
    if Result return

    ! Build a map of the relays
    put `{}` into RelayMap
    put 0 into N
    while N is less than the json count of Data
    begin
        put element N of Data into Item
        put property `name` of Item into Name
        put property Name of RelayMap into Relays
        if Relays is empty put `[]` into Relays
        append Item to Relays
        set property Name of RelayMap to Relays
        add 1 to N
    end
    ! Build a new data array
    put `[]` into Data
    put the json keys of RelayMap into Keys
    put the json count of Keys into K
    put 0 into N
    while N is less than K
    begin
        put element N of Keys into Name
        put property Name of RelayMap into Relays
        put 0 into M
        while M is less than the json count of Relays
        begin
            append element M of Relays to Data
            add 1 to M
        end
        add 1 to N
    end
    return

BuildList:
    clear RelayList
    put the json count of Data into RelayCount
    set the elements of DeleteRelay to RelayCount
    put 1 into Index
    put 0 into N
    while N is less than RelayCount
    begin
        put element N of Data into Item
        put RelayWebson into Webson
        replace `<ID>` with N in Webson
        render Webson in RelayList
        attach RelayID to `cf-relay-` cat N
        set the content of RelayID to Index
        attach RoomInput to `cf-relay-` cat N cat `-room`
        set the content of RoomInput to property `name` of Item
        attach TypeInput to `cf-relay-` cat N cat `-type`
        set the content of TypeInput to property `relayType` of Item
        attach AddressInput to `cf-relay-` cat N cat `-address`
        set the content of AddressInput to property `address` of Item
        index DeleteRelay to N
        attach DeleteRelay to `cf-room-` cat N cat `-delete`
        add 1 to Index
        add 1 to N
    end
    on click DeleteRelay go to OnDeleteRelay
    return

CaptureFields:
    put the json count of Data into K
    put `[]` into Data
    put 0 into N
    while N is less than K
    begin
        put `{}` into Item
        attach RoomInput to `cf-relay-` cat N cat `-room`
        set property `name` of Item to the content of RoomInput
        attach TypeInput to `cf-relay-` cat N cat `-type`
        set property `relayType` of Item to the content of TypeInput
        attach AddressInput to `cf-relay-` cat N cat `-address`
        set property `address` of Item to the content of AddressInput
        append Item to Data
        add 1 to N
    end
    return

CheckRoomNames:
    set Result
    put 0 into N
    while N is less than the json count of Data
    begin
        put element N of Data into Item
        put property `name` of Item into Name
        set Result
        put 0 into M
        while M is less than the json count of Rooms
        begin
            put element M of Rooms into Room
            if property `name` of Room is Name clear Result
            add 1 to M
        end
        if Result
        begin
            alert `'` cat Name cat `' is not part of this map`
            return
        end
        add 1 to N
    end
    return
