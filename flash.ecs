!   flash.ecs

!   This script sets up all the firmware/software on an RBR-Now device

    script Flash

    variable Port       ! the port used by the device, e.g. /dev/ttyUSB0 or /dev/ttyACM0
    variable URL        ! the URL of the downloadable Micropython binary
    variable Binary     ! the path and name of the file to save the Micropython binary
    variable Scripts    ! the path to the RBR-Now scripts directory (without a terminating /)
    variable Files
    variable N

    ! Set things up:
    put `/dev/ttyUSB0` into Port
    put `https://micropython.org/resources/firmware/ESP32_GENERIC_C3-20250415-v1.25.0.bin` into URL
    put `ESP32-C3.bin` into Binary
    put `RBRNow` into Scripts

    ! Erase the device and install MicroPython
    download binary URL to Binary
    system `esptool.py --port ` cat Port cat ` erase_flash`
    system `esptool.py --port ` cat Port cat ` --baud 460800 write_flash 0 ` cat Binary

    ! Create directories on the ESP32
    save `import os` cat newline
        cat `os.mkdir('lib')` cat newline
        cat `os.mkdir('lib/aioble')` cat newline
        cat `os.remove('mkdirs.py')` cat newline
        to `mkdirs.py`
    system `ampy --port ` cat Port cat ` put mkdirs.py`
    system `ampy --port ` cat Port cat ` run mkdirs.py`

    ! Copy the BLE library files
    load Files from Scripts cat `/lib/aioble/files.txt`
    trim Files
    split Files
    put 0 into N
    while N is less than the elements of Files
    begin
        index Files to N
        print `upload /lib/aioble/` cat Files
        system `ampy --port ` cat Port cat ` put ` cat Scripts  cat `/lib/aioble/` cat Files
        ! Move the file
        save `import os` cat newline
            cat `source_file = '` cat Files cat `'` cat newline
            cat `destination_dir = 'lib/aioble'` cat newline
            cat `os.rename(source_file, f'{destination_dir}/{source_file}')` cat newline
            cat `os.remove('move.py')` cat newline
            to `move.py`
        system `ampy --port ` cat Port cat ` put move.py`
        system `ampy --port ` cat Port cat ` run move.py`
        increment N
    end

    ! Copy the RBR-Now files
    load Files from Scripts cat `/files.txt`
    trim Files
    split Files
    put 0 into N
    while N is less than the elements of Files
    begin
        index Files to N
        print `upload ` cat Files
        system `ampy --port ` cat Port cat ` put ` cat Scripts cat `/` cat Files
        increment N
    end

    exit
