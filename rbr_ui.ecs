
!   rbr-ui.ecs

    script RBR_UI

    use graphics
    
    import plugin RBR_UI from /home/graham/dev/rbr/rbr_ui.py

    rbrwin Window
    room Room
    element Banner
    element NameAndProfiles
    button Hamburger
    button ModeButton
    button ToolsButton
    ssh Controller
    module Module
    variable RamDisk
    variable WindowWidth
    variable WindowHeight
    variable RoomHeight
    variable Name
    variable Mode
    variable Map
    variable CurrentProfile
    variable Profiles
    variable Profile
    variable SystemData
    variable Rooms
    variable RoomSpec
    variable RoomData
    variable Choices
    variable Choice
    variable Tick
    variable Result
    variable R
    variable T

    init graphics

    put 1024 into WindowHeight
    put 600 into WindowWidth
    divide WindowHeight by 12 giving RoomHeight
    put 0 into Tick

    set Controller
        host `192.168.1.236`
        user `orangepi`
        password `r00m8Yr00m`

    put `/mnt/data/` into RamDisk

    create Window title `xx` size WindowWidth WindowHeight

    gosub to Refresh

    show Window

    start graphics
    on tick
    begin
        put the ticker into Tick
        if Tick modulo 1000 is 0 gosub to Refresh
    end
    stop

Refresh:

    load Map from Controller RamDisk cat `map`
    put json Map into Map
    load CurrentProfile from Controller RamDisk cat `profile`
    put the value of CurrentProfile into CurrentProfile
    load SystemData from Controller RamDisk cat `systemdata`
    put json SystemData into SystemData
    put property `profiles` of Map into Profiles
    put element CurrentProfile of Profiles into Profile
    put property `rooms` of Profile into Rooms
    set the elements of Room to the count of Rooms
    set the elements of RoomData to the count of Rooms
    set the elements of ModeButton to the count of Rooms
    set the elements of ToolsButton to the count of Rooms

    clear Window
    put 0 into R
    while R is less than the count of Rooms
    begin
        index RoomData to R
        put element R of Rooms into RoomSpec
        put property `name` of RoomSpec into Name
        put property `mode` of RoomSpec into Mode
        gosub to CreateRoom
        put property Name of SystemData into RoomData
        set attribute `temperature` of Room to property `temperature` of RoomData
        increment R
    end
    set attribute `system name` of Window to property `name` of Map
    set attribute `profile` of Window to property `name` of Profile

    attach Banner to element `banner` of Window
    attach Hamburger to element `hamburger` of Banner
    on click Hamburger go to ShowMainMenu

    attach NameAndProfiles to element `profiles` of Window
    return

ReadError:
    put Tick into T
    divide T by 100
    log `Read failure at ` cat T
    return

CreateRoom:
!    log `Create ` cat Name cat `, mode ` cat Mode
    index Room to R
    create Room
        name Name
        mode Mode
        height RoomHeight
        index R
    add Room to Window
!    log Room
    index ModeButton to R
    attach ModeButton to element `mode` of Room
    on click ModeButton
    begin
        put attribute `index` of ModeButton into R
        index Room to R
        log `Mode for ` cat attribute `name` of Room
    end
    index ToolsButton to R
    attach ToolsButton to element `tools` of Room
    on click ToolsButton
    begin
        put attribute `index` of ToolsButton into R
        index Room to R
        log `Tools for ` cat attribute `name` of Room
    end
    return

ShowMainMenu:
    put json `[]` into Choices
    append `Set the system name` to Choices
    append `Set the request relay` to Choices
    append `Power off` to Choices
    append `Exit Application` to Choices
    append `Cancel` to Choices

    select Choice from menu `Main Menu` with Choices
    log Choice
    if Choice is element 0 of Choices go to SetSystemName
    if Choice is element 1 of Choices go to Nothing
    if Choice is element 2 of Choices go to Nothing
    if Choice is element 3 of Choices exit
    if Choice is element 4 of Choices stop
    stop

Nothing:
    stop

SetSystemName:
    run `systemName.ecs` as Module with Window and RamDisk
        and Controller and NameAndProfiles and Result
    log Result
    stop
